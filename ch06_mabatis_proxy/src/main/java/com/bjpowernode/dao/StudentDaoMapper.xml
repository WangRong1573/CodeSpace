<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dao.StudentDao">
    <select id="selectStudents" resultType="com.bjpowernode.domain.Student">
        select * from t_student;
    </select>
    <insert id="insertStudent">
        insert into t_student(name,age) values (#{name},#{age});
    </insert>
    
    <select id="selectMultiParam" resultType="com.bjpowernode.domain.Student">
        select * from t_student where name=#{name} or age = #{age};
    </select>

    <select id="selectMultiObject" resultType="com.bjpowernode.domain.Student">
        select * from t_student where name=#{name} or age = #{age};
    </select>
    
    <select id="selectMultiPosition" resultType="com.bjpowernode.domain.Student">
        select * from t_student where name = #{arg0} or age = #{arg1};
    </select>

    <!--
    # 和 $区别
    1.#使用？在sql语句中做占位，使用PreparedStatement执行sql，效率高
    2.#能够避免sql注入，更安全
    3.$是使用字符串连接的方式，使用Statement执行sql，效率低
    4.$存在sql注入风险，缺乏安全性
    5.$用来替换表名或者列名

    -->
    <select id="selectUse$order" resultType="com.bjpowernode.domain.Student">
        select * from t_student order by ${cloName};
    </select>

    <!--
    当实体类的属性名和数据库的列名不一致时的解决方案，推荐sql语句中字段名起别名
    -->

    <select id="selectMyStudents" resultType="com.bjpowernode.domain.MyStudent">
        select id as stuid,name as stuname,age as stuage from t_student;
    </select>

    <!--
    like语句的拼接
    -->
    <select id="selectLikeOne" resultType="com.bjpowernode.domain.Student">
        select * from t_student where name like #{name};
    </select>

    <!--
    like语句的第二种方式
    -->
    <select id="selectLikeTwo" resultType="com.bjpowernode.domain.Student">
        select * from t_student where name like #{name} "%";
    </select>

    <select id="selectIf" resultType="com.bjpowernode.domain.Student">
        select * from t_student where 1=1
        <if test="name != null and name != '' ">
            and name = #{name}
        </if>
        <if test="age > 25">
            or age >#{age}
        </if>
    </select>

    <select id="selectWhere" resultType="com.bjpowernode.domain.Student">
        select * from t_student
        <where>
            <if test="name != null and name != '' ">
                and name = #{name}
            </if>
            <if test="age > 25">
                or age >#{age}
            </if>
        </where>
    </select>
</mapper>