<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//com.mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.StudentDao">
    <select id="selectStudentById" resultType="com.demo.entity.Student">
        select id,name,email,age from student where id=#{id}
    </select>

    <select id="selectMultiParam" resultType="com.demo.entity.Student">
        select id,name,email,age from student where name = #{myname} or age = #{myage}
    </select>

<!--    使用对象传参-->
    <select id="selectMultiObject" resultType="com.demo.entity.Student">
        select id,name,email,age from student where name = #{name} or age = #{age}
    </select>

<!--    按参数位置传参（了解）-->
    <select id="selectMultiPosition" resultType="com.demo.entity.Student">
         select id,name,email,age from student where name=#{arg0} or age = #{arg1}
    </select>

<!--    使用map传值，#{map的key}-->
    <select id="selectMultiByMap" resultType="com.demo.entity.Student">
        select id,name,email,age from student where name=#{name} or age = #{age}
    </select>

<!--    resultType简单类型-->
    <select id="selectCountOfStudent" resultType="java.lang.Integer">
        select count(*) from student
    </select>

<!--    自定义别名-->
    <select id="selectViewStudentById" resultType="com.demo.entity.ViewStudent">
        select id,name from student where id = #{id}
    </select>

<!--    自定义别名第二种方式-->
    <select id="queryStudent" resultType="QueryStudent">
        select id,name from student where id = #{id}
    </select>

<!--    返回map
    返回类型是map，列名是map的key，列值是map的value
-->
    <select id="selectMapById" resultType="java.util.HashMap">
        select id,name from student where id = #{id}
    </select>

<!--    使用resultMap
        1.先定义resultMap
        2.在select标签，使用resultMap来引用定义的resultMap
-->
<!--    定义resultMap
        1.id：自定义名称，表示定义的resultMap
        2.type：java类型的全限定名称
-->
    <resultMap id="stuMap" type="com.demo.entity.Student">
<!--    column表示列名，property表示java类型的属性名    主键列,使用id标签；非主键列，使用result标签-->
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="email" property="email"></result>
        <result column="age" property="age"></result>
    </resultMap>
    <select id="selectAllStudent" resultMap="stuMap">
        select id,name from student
    </select>

<!--    数据库列名与java对象的属性名不一致时-->
    <resultMap id="myMap" type="com.demo.entity.MyStudent">
        <id column="id" property="myId"></id>
        <result column="name" property="myName"></result>
        <result column="email" property="myEmail"></result>
        <result column="age" property="myAge"></result>
    </resultMap>

    <select id="selectMyStudent" resultMap="myMap">
        select id,name,email,age from student
    </select>

<!--    数据库列名与java对象的属性名不一致时，第二种方案：使用列别名
        resultType使用原则是：类名与java对象的属性名相同
-->
    <select id="selectMyStudent2" resultType="com.demo.entity.MyStudent">
        select id as myId,name as myName,email as myEmail,age as myAge from student
    </select>
</mapper>
