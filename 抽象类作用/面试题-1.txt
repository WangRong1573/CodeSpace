一、重写和重载的区别

	1.重载：
		java中允许用一个类文件中出现多个方法名相同，参数列表不同的方法，称为重载
		要求方法名相同，参数列表不相同（个数不同，类型不同，参数类型出现顺序）
		
		目的：让方法在接收不同的参数时，实现不同的功能
		
	2.重写：
		发生在继承的过程中，子类对父类方法实现细节进行重新定义
		
		1）重写方法时，子类不能降低方法的访问权限，可以扩大
		2）由private或者final修饰的方法都不能被重写
		3）抛出的异常可以是父类抛出异常的全集，子集，空集（即不能比父类抛出更多的异常）
		4）方法返回值，子类不能扩大返回值类型范围
		
二、throw 和 throws

	1.throws：
		1）声明位置：类名之后
		2）作用：通知当前方法在运行时有可能抛出的异常
		3）携带数据：throws后面携带异常类型，可以携带多个异常类型
		4）调用：当一个方法被throws修饰时，调用方法时必须考虑异常捕获问题
		
	2.throw：
		1.声明位置：方法的执行体
		2.作用：是一个命令，执行时会抛出一个指定的异常对象
		3.携带数据：携带的是指定的异常对象，只能携带一个异常对象
		4.调用：当一个方法的内部存在throw命令时，在调用时不用考虑异常捕获问题

三、接口和抽象类的区别

	1.接口：
		1）是一种特殊类文件
		2）作用：指定规则，降低耦合度
		3）使用规则：
			属性都是默认静态常量属性
			方法都是抽象方法，如果需要定义具体方法实现，需要使用default修饰
			接口中方法访问权限不能是private
			接口与接口之间可以实现多继承，但是接口之间不能相互实现
			接口不存在构造方法，即不能被实例化
			
	2.抽象类：
		1）抽象类由abstract修饰
		2）抽象类作用降低接口实现类与接口之间实现难度（*****）
		3）使用规则：
			可以声明抽象方法，也可以声明具体方法
			声明抽象方法必须由子类进行重写
			抽象类实现接口时，不需要对接口方法进行重写，未实现的方法，抽象类的子类必须重写
			抽象类有构造方法，但是不能使用
